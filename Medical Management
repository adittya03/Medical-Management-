import tkinter as tk
from tkinter import messagebox

class Medicine:
    def __init__(self, name, quantity, price):
        self.name = name
        self.quantity = quantity
        self.price = price  # Price in rupees (₹)

class MedicalStore:
    def __init__(self):
        self.medicines = []

    def add_medicine(self, name, quantity, price):
        medicine = Medicine(name, quantity, price)
        self.medicines.append(medicine)

    def display_medicines(self):
        return self.medicines

    def sell_medicine(self, name, quantity):
        for med in self.medicines:
            if med.name == name:
                if med.quantity >= quantity:
                    med.quantity -= quantity
                    total_cost = med.price * quantity
                    return f"Sold {quantity} units of {med.name} for ₹{total_cost:.2f}"
                else:
                    return f"Insufficient stock for {med.name}"
        return f"{name} not found in inventory"

def add_medicine():
    name = name_entry.get()
    quantity = int(quantity_entry.get())
    price = float(price_entry.get())
    store.add_medicine(name, quantity, price)
    messagebox.showinfo("Success", f"{name} added to inventory.")

def display_medicines():
    medicines = store.display_medicines()
    result_text.config(state=tk.NORMAL)
    result_text.delete('1.0', tk.END)
    for med in medicines:
        result_text.insert(tk.END, f"Name: {med.name}, Quantity: {med.quantity}, Price: ₹{med.price:.2f}\n")
    result_text.config(state=tk.DISABLED)

def sell_medicine():
    name = sell_name_entry.get()
    quantity = int(sell_quantity_entry.get())
    result = store.sell_medicine(name, quantity)
    if "Insufficient stock" in result:
        messagebox.showerror("Error", result)
    elif "not found" in result:
        messagebox.showerror("Error", result)
    else:
        messagebox.showinfo("Success", result)

store = MedicalStore()

# Create the main window
root = tk.Tk()
root.title("Medical Store Management System")

# Add Medicine Section
add_frame = tk.Frame(root)
add_frame.pack(pady=10)

name_label = tk.Label(add_frame, text="Medicine Name:")
name_label.grid(row=0, column=0)
name_entry = tk.Entry(add_frame)
name_entry.grid(row=0, column=1)

quantity_label = tk.Label(add_frame, text="Quantity:")
quantity_label.grid(row=1, column=0)
quantity_entry = tk.Entry(add_frame)
quantity_entry.grid(row=1, column=1)

price_label = tk.Label(add_frame, text="Price (₹):")
price_label.grid(row=2, column=0)
price_entry = tk.Entry(add_frame)
price_entry.grid(row=2, column=1)

add_button = tk.Button(add_frame, text="Add Medicine", command=add_medicine)
add_button.grid(row=3, column=0, columnspan=2)

# Display Medicines Section
display_frame = tk.Frame(root)
display_frame.pack(pady=10)

display_button = tk.Button(display_frame, text="Display Medicines", command=display_medicines)
display_button.pack()

result_text = tk.Text(display_frame, height=10, width=40)
result_text.config(state=tk.DISABLED)
result_text.pack()

# Sell Medicine Section
sell_frame = tk.Frame(root)
sell_frame.pack(pady=10)

sell_name_label = tk.Label(sell_frame, text="Medicine Name:")
sell_name_label.grid(row=0, column=0)
sell_name_entry = tk.Entry(sell_frame)
sell_name_entry.grid(row=0, column=1)

sell_quantity_label = tk.Label(sell_frame, text="Quantity:")
sell_quantity_label.grid(row=1, column=0)
sell_quantity_entry = tk.Entry(sell_frame)
sell_quantity_entry.grid(row=1, column=1)

sell_button = tk.Button(sell_frame, text="Sell Medicine", command=sell_medicine)
sell_button.grid(row=2, column=0, columnspan=2)

root.mainloop()
